@keyframes settings-popup {
    from {
        opacity: 0;
        transform: translate(-50%, 5em);
    }

    to {
        opacity: 0;
        transform: translate(-50%, 5em);
    }
}

x-settings {
    dialog {
        &:not([open]) {
            display: none;
        }

        &::backdrop {
            position: fixed;
            inset: 0px;
            background: rgba(0, 0, 0, 0);
            transition: background 0.3s;
            //animation: 0.3s linear fade-out;
            //animation-fill-mode: both;
        }

        position: fixed;
        //border: 1px solid rgba(0,0,0);
        border-radius: var(--radius-medium);
        top: 1em;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
        left: 50%;
        width: 35em;
        max-width: 90vw;
        opacity: 0;
        transform: translate(-50%, 3em);
        transition: opacity 0.3s, transform 0.3s;
        background-color: transparent;

        &.showing {
            opacity: 1;
            transform: translate(-50%, 0em);

            &::backdrop {
                background: rgba(0, 0, 0, 0.3);
                //animation-fill-mode: both;
                //animation: 0.3s linear fade-in;
            }
        }
    }

    article {
        display: flow-root;
        padding: 0 1rem;
        background-color: #fff;
        border-bottom-left-radius: var(--radius-medium);
        border-bottom-right-radius: var(--radius-medium);
    }

    header {
        border-top-right-radius: var(--radius-medium);
        border-top-left-radius: var(--radius-medium);
        padding: 0.7rem 0.7rem;
        display: flex;
        font-size: 1.1em;
        font-family: $font_body;
        font-weight: bold;
        gap: 0.5em;
        align-items: center;
        //border-bottom: 1px solid #ccc;
        //background: #eee;

        background-color: var(--sidebar-color);
        color: #fff;

        button {
            order: 2;
            border-radius: 0.2em;
            background-color: var(--accent-color);
            color: #fff;
            font-weight: bold;
            border: 1px solid rgba(0, 0, 0, 0.4);
            width: 1.2em;
            height: 1.2em;
        }

        &:after {
            display: block;
            content: " ";
            height: 0.2em;
            background: #ccc; //var(--accent-color);
            background: lighten($sidebar_color, 10%);
            border-radius: 0.2em;
            flex: 1;
            order: 1;
        }
    }

    select,
    input[type="numeric"],
    input[type="text"],
    textarea {
        width: 100%;
        box-shadow: 0px 0px 0px 1px #fff inset, 0px 0px 6px rgba(0, 0, 0, 0.1) inset;
        border-radius: var(--radius-small);
        border: 1px solid #ccc;
        padding: 0.5em 0.5em;

        &:disabled {
            color: #888;
            background-color: #eee;
        }

        &:focus {
            border-color: #aaa;
            background: #f8f8f8;
        }
    }

    textarea {
        height: 5em;
    }

    .checkbox {
    //,.imperial-metric-checkbox {
        display: flex;
        align-items: center;
        gap: 0.5em;

        input {
            display: none;
        }

        &:before {
            font-family: "FontAwesome";
            content: " ";
            display: inline-block;
            width: 1.5em;
            height: 1.5em;
            text-align: center;
            line-height: 1.5em;
            border: 1px solid var(--divider-color-light);
            border-radius: var(--radius-small);
        }

        &:after {
            content: attr(data-text-off);
        }

        &:has(input:checked) {
            &:after {
                content: attr(data-text-on);
            }

            &:before {
                content: "\f00c";
                background-color: var(--accent-color);
                border-color: rgba(0, 0, 0, 0.3);
                color: #fff;
            }
        }
    }

    /*.imperial-metric-checkbox {
        &:after {
            content: "Imperial";
        }

        &:has(input:checked) {
            &:after {
                content: "Metric";
            }
        }
    }*/

    article > label {
        display: grid;
        grid-template-columns: var(--label-width) 1fr;
        gap: 1em;
        align-items: center;
        margin: 1em 0;
        --label-width: 10em;
        white-space: nowrap;

        &:has([type="range"]) {
            grid-template-columns: var(--label-width) 1fr 4em;
        }

        input[type="range"] {
            min-width: 1em;
        }

        &:has(input[type="checkbox"]) {
            grid-template-columns: var(--label-width) min-content;
        }

        @media all and (max-width: $mobile_width) {
            --label-width: minmax(min-content, 4em);
        }
    }
}
